//stack array based implementation//
#include<stdio.h>
#define MAXSIZE 101
int A[MAXSIZE];//integer array to store the stack//
int top=-1;//variable to mark top of stack in array//
//push operation to insert an element on top of stack//
void push(int x)
{
	if(top == MAXSIZE -1)//overflow case//
	{
		printf("Error:satck overflow\n");
		return;
	}
	top=top+1;
	A[top]=x;
}
//pop operation to remove element from top of stack//
void pop()
{
	if(top == -1)
	{       //stack is empty,pop should through error//
	printf("Error:No elements to pop\n");
	return;
}
 top=top-1;

}
//Top operation to return element of stack//
int Top()
{
	return A[top];
}
//This function will return 1(true) if stack is empty,0(false) otherwise//
int IsEmpty()
{
	if(top == -1) return 1;
	return 0;
}
//This will print all elements in stack at any stage//
void print()
{
	int i;
	printf("stack: ");
	for(i=0; i<=top; i++)
	printf("%d",A[i]);
	printf("\n");
}
int main()
{
	push(2); print();
	push(5); print();//calling print() after each push(or) pop to see state of stack//
	push(10); print();
	pop(); print();
	push(12); print();
}
